如何快速进入遗留系统进行软件开发
日期：2017-09-01 08:46浏览：981评论：7
前言
由于本人工作性质的原因，经常需要去支撑其他遗留产品的相关工作，包括新增一个需求，进行代码重构，架构优化等等。
通过一些项目参与的总结，我希望可以帮助大家如何快速地了解一个遗留系统的软件架构，方便我们开展自己的工作



通过产品文档来了解产品业务

在support.huawei.com上面找到自己需要了解的产品的产品文档。
通过产品文档，可以了解到下面一些信息：

产品的背景和主要的业务方向。
产品的硬件和软件结构，比如对于IVS产品，可以得到下面的整体解决方案架构和系统架构
image.png
image.png

产品的组网和周边产品的接口
了解这些快速帮助你了解产品的业务背景，软件架构，进程分布等，还有一些产品的专业术语的对齐，比如你就了解了什么叫做SCU, SMU, MU这些缩写。 一般这个过程花不了多长时间，3个小时到半天就差不多了。

阅读产品架构文档
一般来说，产品会有类似于逻辑架构设计说明书之类的文档，这个可以快速帮助你了解产品的逻辑架构。 找到IVS的逻辑架构设计说明书以后， 我们可以看到整个系统的产品逻辑架构和各个子系统的交互图，考虑了资产安全性，这里就不贴出来了，大家可以找相应产品的逻辑架构设计来阅读。

通过后面的详细描述，你就可以了解各个子系统的主要功能和职责，以及各个模块的大概交互方式。

这个过程花个1~2个小时就差不多了。

代码阅读
前面都是通过文档来了解产品的业务方向与整体系统架构划分，接下来就可以通过代码来了解更详细的模块功能了。

前期准备
了解编程语言(C++还是Java等语言)，编程框架（使用了Akka，Spring等框架， 或者是基于微服务架构，使用了什么分布式技术），使用的平台（产品的平台，Dopra等）。 通过了解这些，我们可以了解产品的编程模型，并且如果你对某些领域有经验的话，你可能对于系统底层运作机制更快上手。

了解产品的领域模型和产品实现的时候对应软件模型
对于视频监控来说，典型的领域对象是就是摄像机，视频，媒体流，图片， 然后产品在实现这些领域对象的时候可能会创造一些Manager, Controller, Cache等软件模型，那么我们需要了解这些模型之间的对应关系。 这样就可以防止我们后面修改代码的时候无意间破坏领域模型。
如果产品有设计到业界的一些标准，比如3GPP等协议，那么这个也需要花一点时间了解一下.

了解产品的主要模块功能
产品可能有几百种业务场景，那么找一个典型场景，找一个熟悉的开发人员按照业务数据流的流动过程来讲解一下每个模块的功能，模块的输入输出等，对于典型场景有一个了解

阅读产品的单元测试用例
如果产品有UT/LLT代码，并且设计的比较合理的话，这份代码会很明显地帮助我们来了解每个模块的功能以及对外暴露的业务接口

代码阅读方式
先了解产品的代码目录结构
通过目录结构来了解代码的模块物理划分

纯粹静态阅读
就是从入口的地方开始阅读代码，慢慢进行代码阅读，但是刚开始最好只关注主干业务，异常场景不要深度去了解。在阅读代码的过程中，最好是通过一些工具做记录，画一些辅助图，用白板/Visio都可以。

通过gdb的Debug进行动态阅读
如果产品支撑给力的话，可以让产品协助你进行debug，调试某个业务流，这样就详细地了解了业务的方向

通过各种工具来分析代码，得到类图，调用关系来了解代码
可以使用understand工具来进行类，方法的调用关系的分析，了解整个模块的拓扑结构，这是一个很好的选择。用来辅助你进行代码阅读和理解。这个工具的详细使用这里就不赘述了，详细的可以去参考使用手册或者网络上的总结。
java的还可以使用JArchitect工具，可惜这些好的代码分析工具都是商业工具，需要付费的。

通过前面的准备，对于典型业务场景和基本编程模型就有了初步了解，这个过程时间会长一点，完全投入的话，差不多要花2~3天。

何时开始编码
等了解了产品的业务以后，并且了解了产品的基本编程模型与模块功能，可以先找一个简单的场景进行编码，然后逐步进行复杂场景的编码。

编码之前有几个重要的东西要配套，如果没有的话，最好这个时候会开始能力建设：

代码的单元测试能力，保证编写代码的业务逻辑争取性。
代码质量的实时反馈，包括pclint，圈复杂度等指标，这样防止很长时间以后再来修改。
如何咨询产品的相关人员
产品的相关人员一般会比较忙，如果你总是问一些低级问题，人家的耐心可能会慢慢耗尽，甚至有的人会反复咨询相同的问题。 那么如何避免这些问题呢？
最好的办法就是：

先找相关人员要到文档，自己先去看文档，然后将疑点进行标记，然后统一去咨询，自己多一些思考，带着问题去问更有效果。
不要零散的去问，这样容易让别人的时间碎片化，最好的方式是针对某个专题找一个会议室集中答疑。
总结
以上是我进入一个遗留系统进行需求开发的处理方式，我也和Thoughtworks长期做技术咨询类的专家做过相关的交流，了解了一些他们的方法和手段。

总的来说，就是从面到点，从业务到技术，从粗略到细节。 但是具体的上手程度还取决于开发人员本身的经验和能力储备，并且我们不仅仅是要在遗留系统上交付需求，更是要高质量无缺陷地交付需求，所以要求还是比较高的。
所以，好的工作方法和扎实的技术能力， 才能让我们更从容地去面对遗留系统，而不会显得特别慌，没有自信, 也需要我们有更强大的耐心。
