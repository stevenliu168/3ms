为什么重构会失败？
                                  --重构失败的根因分析
 

从1990年William Opdyke正式提出了重构，到后来Martin Fowler和Kent Beck给重构下了定义，重构发展出了很多方法。重构也是程序员追求最优秀代码和解决代码架构腐化的方法。

 

但是很多项目组都搞过重构，很少有团队说自己的重构是成功，最会遇到很多问题，听到各种抱怨：重构以后缺陷增加了；重构以后效果不明显；项目进度太紧张了，重构搞不起来。

我们下面可以看一下重构为什么会失败，然后看看怎样才能做到真正高效的重构。

 

1      重构的目标不明确
首先，重构之前要弄清楚自己重构要解决什么问题？

可以先看一下重构的定义

重构(名词):对软件内部结构的一种调整,目的是在不改变"软件之可观察行为"前提下,提高其可理解性,降低其修改成本。

重构(动词):使用一系列重构准则(手法),在不改变"软件之可观察行为"前提下,调整其结构。

其实，重构就是为了解决代码本身的坏味道，提升代码和架构的健壮性，可扩展性与可维护性。如果当我们开发的时候遇到下面问题的时候就可以考虑重构了：

编写代码的时候出现了3个以上地方的重复代码。

每次增加新功能都需要修改很多无关地方的代码。

某个类或者方法再不停地膨胀。

 

也就是说，重构是需要解决实际问题，不能只追求代码情怀，能够显著提高产品开发效率，提高代码的可维护性，这就可以重构。对于有些古老的遗留代码，平时也不用维护，几乎没啥变化的可以考虑不重构，这样才能有明显的收益。

 

还有一点，重构什么就可以结束了？这个与重构的目标有关系，你到底是重构代码，重构模块还是重构架构。代码级别的投入比较小，周期比较短；架构级别的重构投入比较大，周期比较长。所以一定要把自己重构的目标定清楚，才可以开始重构。

2      重构的方法不明确
重构的时候不能觉得自己对于代码的把握程度来进行重构，不停地剪切复制修改，重构是有一套方法的，具体可以参见Martin Fowler的



 

其次重构是有很多工具可以使用得，用来分析代码的各项指标，查看重构的结果等：

 

l  SonarCube可以高质量的管理软件代码，及时地对代码质量进行分析并给出合理的解决方案。

http://3ms.huawei.com/hi/showimage-1426707609-464461-9eefcae41b0ab260d513d7c7f18e5e44.jpg

l  Understand图形化地展现模块间的依赖关系，使用红色线条突出模块的双向依赖，通过点击展开，可以精确到函数和变量级别的依赖，因而模块间的耦合关系可以一目了然。



l  inFusion快速识别出腐朽代码，精确指明问题位置和原因，公司的SAI集成了inFusion的分析，因而在提交代码前通过inFusion工具分析和问题纠正，可以保证入库的代码具备良好的SAI值。



 

3      重构的结果不明确
简单的代码重构可能通过代码检视和基本验证就可以保证重构的结果是正确的，如果是复杂的重构，那么就很难保证重构结果的正确性了。

所以重构的时候一定是要借助UT测试和TDD测试来保证结果正确性的。更可以使用两个版本，一个是原版本，一个是重构版本并行运行，结果比较，不过这样代价是比较大的。



4      重构的人员能力有欠缺
l  单元测试能力欠缺

单元测试和TDD可以有效地保证重构结果的正确性，如果重构人员的测试能力欠缺，那么对于重构的质量保证是有风险的。

l  技术功底欠缺

重构这本书里面的所有方法背后都是对于软件架构的深层次的思考，如果重构人员仅仅是照搬重构方法，不理解背后东西。 这样即使完成了这一次重构，后面写代码和架构设计的时候还是会犯同样的错误，只能等待下一次重构。

 

推荐几本书，可以提高代码和软件架构的素养：

《代码整洁之道 (Clean Code)》

《重构与模式（Refactoring to Patterns）》

《领域驱动设计》

《面向模式的软件架构》

l  追求完美主义

不要一下子把所有的方方面面都重构，要保持小步快走的节奏。就更版本迭代一样，有计划有目的性的重构。

5      重构的团队配合感不强
首先重构代码是有风险的，在进行重构的时候需要了解代码的业务逻辑，当时写这个代码是不是有什么特殊背景，这样重构修改会不会破坏其他功能。对于重构风险高的模块，需要整个团队的合作，包括项目经理，开发人员，测试人员和维护人员进行技术评估，降低重构带来的风险。 所以重构不是体现单兵作战能力的时候，而是体现整个团队协作能力的。

 

其次，重构大部分时候都是为了偿还历史债务，对于历史技术债务，就需要专门的一套管理机制，定时管理和评审技术债务，将高优先级的历史债务按照计划清理。
