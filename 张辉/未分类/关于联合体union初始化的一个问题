在我以前一个博客中数组和结构体初始化规则写到：

如果是联合体类型，那么第一个有名的成员变量按照这些规则递归初始化

有同学问到

“----这句话作何解释，为什么不是长度最长的那一个成员”？

 

这个在C++ 2003标准中是这么说的：

 if T is a union type, the object’s first named data member is zero-initialized;

也就是标准中只说明了第一个有名成员变量的初始化，对于超出的内存的初始化没有描述

也就是说是是由编译器自己实现行为，经过测试 VC2008编译器默认就是将后面的内存都初始化成0了。

 

在最新的ISO C++ 11标准中描述发生了变化

if T is a (possibly cv-qualiﬁed) union type, the object’s ﬁrst non-static named data member is zero-initialized and padding is initialized to zero bits;

也就是说超出的内存要求编译器也初始化为0(padding is initialized to zero bits)

 

参考http://en.cppreference.com/w/cpp/language/zero_initialization
